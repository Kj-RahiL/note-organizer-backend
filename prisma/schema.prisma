generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String   @unique
  role           UserRole
  profilePicture String?
  password       String

  userStatus UserStatus @default(ACTIVE)
  isDeleted  Boolean    @default(false)

  otp        Int?
  otpExpiry  DateTime?
  isVerified Boolean   @default(false)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Note      Note[]
  Category  Category[]
}

model Note {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  authorId   String   @db.ObjectId
  categoryId String   @db.ObjectId
  title      String
  content    String
  priority   Priority @default(MEDIUM)
  isPinned   Boolean  @default(false)
  isArchived Boolean  @default(false)
  isDeleted Boolean  @default(false)
  images     Image[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  //relation
  author   User     @relation(fields: [authorId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  authorId String  @db.ObjectId
  name     String
  color    String? @default("#ffffff")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  author User   @relation(fields: [authorId], references: [id])
  Note   Note[]
}

model Image {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  url        String
  note       Note     @relation(fields: [noteId], references: [id])
  noteId     String   @db.ObjectId
  uploadedAt DateTime @default(now())
}

enum UserRole {
  ADMIN
  SUPER_ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
